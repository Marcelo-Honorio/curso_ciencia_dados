y
x = 1:6
x #x
#ou
y <- 1:4
y
x = 1:6
x #x
#ou
y <- 1:4
y
# Não devem começar por números e nem por pontos;
2x <- 1:6
# Não devem começar por números e nem por pontos;
2x <- 1:6
# Não devem começar por números e nem por pontos;
2x <- 1:6
..x <- 1:6
# Não é desejável que contenham espaços, muito embora a situação seja possível com o uso dos símbolos ``;
nome completo <- "Marcelo Honorio"
`nome completo` <- "Marcelo Honorio"
## Os nomes dos objetos devem seguir algumas regras:
+ Não devem começar por números e nem por pontos;
### Os nomes dos objetos devem seguir algumas regras:
+ Não devem começar por números e nem por pontos;
Os nomes dos objetos estabelecidos em R devem seguir certas regras:
#argumento pra determinar o número de casas decimais
round(x, digits = 1)
install.packages('quarto')
---
title: "Introdução ao Software R"
library(tidyverse)
`install.packages('ggplot2')`
install.packages("cssTools")
---
title: "Introdução ao Software R"
reticulate::repl_python()
reticulate::repl_python()
# Carregando pacotes e dados
library(readr)
library(dplyr)
dados <- read_csv("data.csv")
# Extrair colunas
dados_selec <- select(dados, c(1,2,3))
# Gráficos de duas variáveis
plot(dados_selec$x, dados_selec$y)
# Treinar modelo de regressão linear
reg <- lm(y ~., data = dados_selec)
# Realizar predições
reg_pred <- predict(reg, newdata = dados_selec)
list <- c(1, "é")
?list.dirs()
?array()
x |> mean()
mean(x)
mtcars |>
count()
mtcars |> dplyr::count()
colnames(mtcars)
mtcars |> dplyr::count(mpg)
mtcars |> dplyr::count(cyl)
?count()
df <- tribble(
~name,    ~gender,   ~runs,
"Max",    "male",       10,
"Sandra", "female",      1,
"Susan",  "female",      4)
df <- dplyr::tribble(
~name,    ~gender,   ~runs,
"Max",    "male",       10,
"Sandra", "female",      1,
"Susan",  "female",      4)
df %>% count(gender, wt = runs)
df  |>  count(gender, wt = runs)
df  |>  dplyr::count(gender, wt = runs)
df  |>  dplyr::count(gender)
x <- "Marcelo Honorio"
stringr::str_sub(x, 1, 4)
?stringr::str_to_lower()
dog <- "The quick brown dog"
stringr::str_to_upper(dog)
?dplyr::bind_rows()
#| code-line-numbers: "2-4"
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(<mappings>), stat = <stat>, position = <position>) +
#| code-line-numbers: "2-4"
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(<mappings>), stat = <stat>, position = <position>) +
#| code-line-numbers: "2-4"
ggplot(data = meus_dados) +
geom_function(mapping = aes(<mappings>), stat = <stat>, position = <position>) +
#| code-line-numbers: "2-4"
ggplot(data = meus_dados) +
geom_function(mapping = aes(mappings), stat = stat, position = position) +
coordinate_function +
facet_function
#| code-line-numbers: "2-4"
library(ggplot2)
ggplot(data = meus_dados) +
geom_function(mapping = aes(mappings), stat = stat, position = position) +
coordinate_function +
facet_function
ggplot2::ggplot(mtcars) +
ggplot2::geom_point(aes(x=wt,y=mpg,col=cyl)) +
ggplot2::labs(x = 'Peso (x1000lbs)', y = 'Milhar por galão',
colour='Numero de\n Cilindros')
ggplot(data = meus_dados) +
geom_function(mapping = aes(mappings), stat = stat, position = position) +
coordinate_function +
facet_function
ggplot(data = meus_dados) +
geom_function(mapping = aes(mappings), stat = stat, position = position) +
coordinate_function +
facet_function
ggplot(data = meus_dados) +
geom_function(mapping = aes(mappings), stat = stat, position = position) +
coordinate_function +
facet_function
ggplot2::ggplot(mtcars) +
ggplot2::geom_point(aes(x=wt,y=mpg, col=cyl)) +
ggplot2::labs(x = 'Peso (x1000lbs)', y = 'Milhar por galão',
colour='Numero de\n Cilindros')
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(mappings), stat = stat, position = position) +
loads
mtcars
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(mappings), stat = stat, position = position) +
ggplot(mtcars)
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(mappings), stat = stat, position = position) +
ggplot(data = meus_dados) +
<geom_function>(mapping = aes(mappings), stat = stat, position = position) +
mtcars
#| code-line-numbers: "2"
ggplot(mtcars,
aes(x = cyl,
y = wt))
mtcars
ggplot(mtcars)
install.packages('remotes')
remotes::install_github("wilkelab/cowplot")
install.packages("colorspace", repos = "http://R-Forge.R-project.org")
install.packages("colorspace", repos = "http://R-Forge.R-project.org")
remotes::install_github("clauswilke/colorblindr")
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
pak::pkg_install("r-lib/rlang")
install.packages('pak')
pak::pkg_install("r-lib/rlang")
pkgbuild::check_build_tools(debug = TRUE)
install.packages("pkgbuild")
pkgbuild::check_build_tools(debug = TRUE)
pak::pkg_install("r-lib/rlang")
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
?rlong
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
install.packages("rlang")
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
remove.packages(rlang)
install.packages("rlang")
remove.packages(rlang)
library(rlang)
remove.packages("rlang")
install.packages('rlang')
install.packages("rlang")
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
View(x)
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kable(x)
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x)
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x)
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x) |>
kable_classic(full_width = F, html_font = "Cambria")
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x) |>
kableExtra::kable_classic(full_width = F, html_font = "Cambria")
?kbl()
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x) |>
kableExtra::kable_classic(full_width = T, html_font = "Cambria")
?kable_classic()
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x) |>
kableExtra::kable_classic(full_width = T, html_font = "Cambria", font_size = 7)
`Função R` <- c("c()", "args()", "sample()", "class()", "View()", "head()", "tail()",
"str()", "length()", "dim()", "nrow()", "ncol()", "rm()", "install.packages()")
`Serve para:` <- c("Declarar mais de um valor e/ou objeto", "Verificar os argumentos de uma dada função no R", "Criar amostras", "Verificar as classes dos objetos do R", "Visualizar objetos em um formato semelhante ao de uma planilha", "Visualizar as primeiras observações de uma base de dados", "Visualizar as últimas observações de uma base de dados", "Observar a estrutura de uma base de dados", "Observar o comprimento de um vetor ou de uma lista de dados", "Descobrir as dimensões de um objeto", "Contar o número de linhas de uma base de dados", "Contar o número de colunas de uma base de dados", "Remover um objeto do ambiente de trabalho", "Instalar pacotes")
x <- tibble::tibble(`Função R`, `Serve para:`)
kableExtra::kbl(x) |>
kableExtra::kable_classic(full_width = T, html_font = "Cambria", font_size = 10)
install.packages("colorblindr")
install.packages("remotes")
install.packages("colorspace")
remotes::install_github("clauswilke/colorblindr")
# Carregando pacotes e dados
library(readr)
library(dplyr)
dados <- read_csv("data.csv")
x = 1:6
x
y <- 1:4
y
#| echo: false
library(tidyverse)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
mtcars
#| code-line-numbers: "2"
ggplot(mtcars,
aes(x = cyl,
y = wt))
#| code-line-numbers: "3-5"
ggplot(mtcars,
aes(x = cyl,
y = wt)) +
geom_boxplot()
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| tbl-colwidths: [60,40]
Tipo <- c("Dispersão", "Gráficos de bolhas", "Gráficos de barras", "Histograma",
"Boxplot", "Densidade", "Gráfico de linhas")
`Objeto Geométrico` <- c("geom_point", "goem_point", "geom_bar e geom_coll", "geom_histogram",
"geom_boxplot", "geom_density", "geom_line")
x <- tibble::tibble(Tipo, `Objeto Geométrico`)
library(knitr)
kable(x)
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
mtcars
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars %>%
count(cyl) %>%
ggplot(aes(x = reorder(cyl, -n), y = n)) +
geom_bar(stat = "identity", fill = "#cc0000") +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = n), vjust = -0.5) +
labs(x = NULL, y = NULL,
title = "Count of faculty by rank, 2018-2021") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank())
?mtcars()
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars %>%
filter(!is.na(mpg)) %>%
ggplot(aes(x = mpg, y = wt, group = cyl, color = cyl)) +
geom_line()
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars %>%
filter(!is.na(mpg)) %>%
ggplot(aes(x = wt, y = mpg, group = cyl, color = cyl)) +
geom_line()
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars %>%
filter(!is.na(mpg)) %>%
ggplot(aes(x = cyl, y = wt, group = carb, color = carb)) +
geom_line()
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars %>%
filter(!is.na(mpg)) %>%
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line()
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars %>%
filter(!is.na(mpg)) %>%
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point()
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
#scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars  |>
filter(!is.na(mpg))  |>
ggplot(aes(x = wt, y = qsec, group = cyl, color = cyl)) +
geom_line() +
geom_point() +
#scale_color_brewer(type = "qual", palette = "Dark2") +
labs(x = NULL, y = "Average enrollment",
title = "Average undergraduate enrollment per rank over time") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.background = element_rect(fill = NA),
legend.key = element_rect(fill = NA),
legend.position = c(0.85, 0.82))
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars  |>
filter(!is.na(mpg)) |>
ggplot(aes(x = cyl, y = wt, group = carb, color = carb)) +
geom_line()
#| code-line-numbers: "1-2|3|4"
#| eval: false
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars |>
count(cyl)  |>
ggplot(aes(x = reorder(cyl, -n), y = n)) +
geom_bar(stat = "identity", fill = "#cc0000") +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = n), vjust = -0.5) +
labs(x = NULL, y = NULL,
title = "Count of faculty by rank, 2018-2021") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank())
mtcars  |>
count(cyl)
#| echo: false
#| fig-height: 4
#| fig-align: "center"
mtcars  |>
count(cyl)  |>
ggplot(aes(x = cyl, y = n)) +
geom_bar(stat = "identity")
#| code-fold: true
#| code-summary: "expand for full code"
#| fig-align: "center"
mtcars |>
count(cyl)  |>
ggplot(aes(x = reorder(cyl, -n), y = n)) +
geom_bar(stat = "identity", fill = "#cc0000") +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = n), vjust = -0.5) +
labs(x = NULL, y = NULL,
title = "Count of faculty by rank, 2018-2021") +
theme_linedraw() +
theme(panel.grid.major.x = element_blank(),
axis.ticks = element_blank())
#| tbl-colwidths: [60,40]
Tipo <- c("Dispersão", "Gráficos de bolhas", "Gráficos de barras", "Histograma",
"Boxplot", "Densidade", "Gráfico de linhas")
`Objeto Geométrico` <- c("geom_point", "goem_point", "geom_bar e geom_coll", "geom_histogram",
"geom_boxplot", "geom_density", "geom_line")
x <- tibble::tibble(Tipo, `Objeto Geométrico`)
library(knitr)
kable(x)
library(colorblindr)
?left_join()
stringr::str_length("marcelo")
stringr::str_length("marcelo ")
length("marcelo ")
